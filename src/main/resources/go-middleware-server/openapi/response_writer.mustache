package {{packageName}}

import (
	"encoding/json"
	"net/http"

	"golang.org/x/xerrors"
)

func writeJSON(w http.ResponseWriter, code int, data interface{}, errorLogger func(error)) {
	buf, err := json.Marshal(data)
	if err == nil {
		w.WriteHeader(code)
		w.Write(buf)
	} else {
		errorLogger(xerrors.Errorf("writing JSON error: %w", err))
		w.WriteHeader(http.StatusInternalServerError)
	}
}

// 500 - InternalServerError
func writeJSONInternalServerError(w http.ResponseWriter, errorLogger func(error)) {
	writeJSON(w, http.StatusInternalServerError, ErrorResponse{
		Title:  "Server Action Error",
		Detail: "In invocating server action, error occurred. No error details is presented due to security.",
	}, errorLogger)
}

// 501 - Not Implemented (for Action)
func writeJSONActionNotImplemented(w http.ResponseWriter, errorLogger func(error), actionName string) {
	writeJSON(w, http.StatusNotImplemented, ErrorResponse{
		Title:  "Not Implemented Yet",
		Detail: actionName + " action is not implemented yet.",
	}, errorLogger)
}
