package main

import (
	"log"
	"net/http"

	"{{moduleName}}/{{packageName}}"
	"github.com/go-chi/chi/middleware"
)

func main() {
	router, err := {{packageName}}.NewMiddleware(
		{{packageName}}.WithActions({{packageName}}.Actions{}),
	)
	if err != nil {
		panic(err)
	}
	middlewares := []func(http.Handler) http.Handler{
		middleware.Logger,
		middleware.Recoverer,
		router,
	}
	handler := chain(middlewares, http.NotFoundHandler())
	log.Fatal(http.ListenAndServe(":8080", handler))
}

func chain(middlewares []func(http.Handler) http.Handler, endpoint http.Handler) http.Handler {
	h := endpoint
	for i := len(middlewares) - 1; i >= 0; i-- {
		h = middlewares[i](h)
	}
	return h
}
